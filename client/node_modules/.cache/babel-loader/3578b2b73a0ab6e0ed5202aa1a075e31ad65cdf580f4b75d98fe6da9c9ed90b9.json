{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ishan Ganguly\\\\OneDrive\\\\Desktop\\\\arena\\\\Sports_Arena\\\\client\\\\src\\\\pages\\\\arenas\\\\VolleyballArena.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { useSocket } from '../../context/SocketContext';\nimport './VolleyballArena.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VolleyballArena = () => {\n  _s();\n  var _score$teamA, _score$teamA2, _score$teamB, _score$teamB2;\n  const [score, setScore] = useState({\n    teamA: {\n      points: 0,\n      sets: 0\n    },\n    teamB: {\n      points: 0,\n      sets: 0\n    }\n  });\n  const [currentSet, setCurrentSet] = useState(1);\n  const [serving, setServing] = useState('teamA');\n  const [isLive, setIsLive] = useState(false);\n  const [match, setMatch] = useState(null);\n  const {\n    socket,\n    joinMatch,\n    leaveMatch\n  } = useSocket();\n\n  // Load existing match data on component mount\n  useEffect(() => {\n    const loadExistingMatch = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/matches/live');\n        const data = await response.json();\n        if (data.success && data.data.length > 0) {\n          // Find the first live volleyball match\n          const volleyballMatch = data.data.find(match => match.sport === 'volleyball');\n          if (volleyballMatch) {\n            setMatch(volleyballMatch);\n            setIsLive(true);\n            if (volleyballMatch.volleyballScore) {\n              setScore(volleyballMatch.volleyballScore);\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error loading existing match:', error);\n      }\n    };\n    loadExistingMatch();\n  }, []);\n\n  // Poll for real-time score updates (fallback solution)\n  useEffect(() => {\n    if (match !== null && match !== void 0 && match._id && isLive) {\n      console.log('Starting polling for volleyball match:', match._id);\n      const pollInterval = setInterval(async () => {\n        try {\n          const response = await fetch(`http://localhost:5000/api/matches/${match._id}`);\n          const data = await response.json();\n          if (data.success && data.data.volleyballScore) {\n            console.log('Volleyball polling update received:', data.data.volleyballScore);\n            setScore(data.data.volleyballScore);\n          }\n        } catch (error) {\n          console.error('Volleyball polling error:', error);\n        }\n      }, 2000); // Poll every 2 seconds\n\n      return () => {\n        console.log('Stopping volleyball polling for match:', match._id);\n        clearInterval(pollInterval);\n      };\n    }\n  }, [match === null || match === void 0 ? void 0 : match._id, isLive]);\n  const addPoint = async team => {\n    if (!(match !== null && match !== void 0 && match._id)) return;\n    setScore(prev => {\n      // Ensure team objects exist\n      const teamA = prev.teamA || {\n        points: 0,\n        sets: 0\n      };\n      const teamB = prev.teamB || {\n        points: 0,\n        sets: 0\n      };\n      const newScore = {\n        teamA,\n        teamB,\n        [team]: {\n          ...(team === 'teamA' ? teamA : teamB),\n          points: (team === 'teamA' ? teamA.points : teamB.points) + 1\n        }\n      };\n\n      // Check if set is won (25 points with 2-point lead, or 15 in 5th set)\n      const setTarget = currentSet === 5 ? 15 : 25;\n      const otherTeam = team === 'teamA' ? 'teamB' : 'teamA';\n      if (newScore[team].points >= setTarget && newScore[team].points - newScore[otherTeam].points >= 2) {\n        // Set won\n        const updatedScore = {\n          ...newScore,\n          [team]: {\n            ...newScore[team],\n            sets: newScore[team].sets + 1,\n            points: 0\n          },\n          [otherTeam]: {\n            ...newScore[otherTeam],\n            points: 0\n          }\n        };\n        setCurrentSet(prev => prev + 1);\n        return updatedScore;\n      }\n\n      // Switch serving team\n      setServing(otherTeam);\n      return newScore;\n    });\n\n    // Update score in database\n    try {\n      var _score$team;\n      const response = await fetch(`http://localhost:5000/api/matches/${match._id}/score`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sport: 'volleyball',\n          action: 'point',\n          team,\n          details: {\n            points: (((_score$team = score[team]) === null || _score$team === void 0 ? void 0 : _score$team.points) || 0) + 1\n          }\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        // Update with backend score if available\n        if (data.data.volleyballScore) {\n          setScore(data.data.volleyballScore);\n        }\n      }\n    } catch (error) {\n      console.error('Error updating score:', error);\n    }\n  };\n  const startMatch = async () => {\n    try {\n      // First create a match in the database\n      const createResponse = await fetch('http://localhost:5000/api/matches', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sport: 'volleyball',\n          teamA: {\n            name: 'Team A'\n          },\n          teamB: {\n            name: 'Team B'\n          },\n          status: 'scheduled',\n          venue: 'Volleyball Court'\n        })\n      });\n      if (createResponse.ok) {\n        const matchData = await createResponse.json();\n        setMatch(matchData.data);\n\n        // Now start the match\n        const startResponse = await fetch(`http://localhost:5000/api/matches/${matchData.data._id}/start`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (startResponse.ok) {\n          setIsLive(true);\n        }\n      }\n    } catch (error) {\n      console.error('Error starting match:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"volleyball-arena\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"volleyball-arena-container\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"arena-header\",\n        initial: {\n          opacity: 0,\n          y: -30\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          duration: 0.6\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"arena-title\",\n          children: \"Volleyball Arena\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"match-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"teams\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"team\",\n              children: \"Team A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"vs\",\n              children: \"VS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"team\",\n              children: \"Team B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `match-status ${isLive ? 'live' : 'scheduled'}`,\n            children: isLive ? 'LIVE' : 'SCHEDULED'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volleyball-scoreboard\",\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"score-display\",\n          initial: {\n            opacity: 0,\n            scale: 0.9\n          },\n          animate: {\n            opacity: 1,\n            scale: 1\n          },\n          transition: {\n            duration: 0.6,\n            delay: 0.2\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main-score\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"team-score\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"team-name\",\n                children: \"Team A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"points\",\n                children: ((_score$teamA = score.teamA) === null || _score$teamA === void 0 ? void 0 : _score$teamA.points) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sets\",\n                children: [\"Sets: \", ((_score$teamA2 = score.teamA) === null || _score$teamA2 === void 0 ? void 0 : _score$teamA2.sets) || 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator\",\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"team-score\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"points\",\n                children: ((_score$teamB = score.teamB) === null || _score$teamB === void 0 ? void 0 : _score$teamB.points) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"team-name\",\n                children: \"Team B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sets\",\n                children: [\"Sets: \", ((_score$teamB2 = score.teamB) === null || _score$teamB2 === void 0 ? void 0 : _score$teamB2.sets) || 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"set-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"current-set\",\n              children: [\"Set \", currentSet]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"serving\",\n              children: [\"Serving: \", serving === 'teamA' ? 'Team A' : 'Team B']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"scorer-controls\",\n          initial: {\n            opacity: 0,\n            y: 30\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          transition: {\n            duration: 0.6,\n            delay: 0.4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"points-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"points-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"score-btn\",\n                onClick: () => addPoint('teamA'),\n                children: \"Team A Point\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"score-btn\",\n                onClick: () => addPoint('teamB'),\n                children: \"Team B Point\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions-section\",\n            children: !isLive && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-btn start\",\n              onClick: startMatch,\n              children: \"Start Match\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(VolleyballArena, \"TruxJf8P7kkxcFNIbJB33nL8sq8=\", false, function () {\n  return [useSocket];\n});\n_c = VolleyballArena;\nexport default VolleyballArena;\nvar _c;\n$RefreshReg$(_c, \"VolleyballArena\");","map":{"version":3,"names":["React","useState","useEffect","motion","useSocket","jsxDEV","_jsxDEV","VolleyballArena","_s","_score$teamA","_score$teamA2","_score$teamB","_score$teamB2","score","setScore","teamA","points","sets","teamB","currentSet","setCurrentSet","serving","setServing","isLive","setIsLive","match","setMatch","socket","joinMatch","leaveMatch","loadExistingMatch","response","fetch","data","json","success","length","volleyballMatch","find","sport","volleyballScore","error","console","_id","log","pollInterval","setInterval","clearInterval","addPoint","team","prev","newScore","setTarget","otherTeam","updatedScore","_score$team","method","headers","body","JSON","stringify","action","details","ok","startMatch","createResponse","name","status","venue","matchData","startResponse","className","children","div","initial","opacity","y","animate","transition","duration","fileName","_jsxFileName","lineNumber","columnNumber","scale","delay","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ishan Ganguly/OneDrive/Desktop/arena/Sports_Arena/client/src/pages/arenas/VolleyballArena.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { useSocket } from '../../context/SocketContext';\nimport './VolleyballArena.css';\n\nconst VolleyballArena: React.FC = () => {\n  const [score, setScore] = useState({\n    teamA: { points: 0, sets: 0 },\n    teamB: { points: 0, sets: 0 }\n  });\n  const [currentSet, setCurrentSet] = useState(1);\n  const [serving, setServing] = useState<'teamA' | 'teamB'>('teamA');\n  const [isLive, setIsLive] = useState(false);\n  const [match, setMatch] = useState<any>(null);\n  const { socket, joinMatch, leaveMatch } = useSocket();\n\n  // Load existing match data on component mount\n  useEffect(() => {\n    const loadExistingMatch = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/matches/live');\n        const data = await response.json();\n        if (data.success && data.data.length > 0) {\n          // Find the first live volleyball match\n          const volleyballMatch = data.data.find((match: any) => match.sport === 'volleyball');\n          if (volleyballMatch) {\n            setMatch(volleyballMatch);\n            setIsLive(true);\n            if (volleyballMatch.volleyballScore) {\n              setScore(volleyballMatch.volleyballScore);\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error loading existing match:', error);\n      }\n    };\n\n    loadExistingMatch();\n  }, []);\n\n  // Poll for real-time score updates (fallback solution)\n  useEffect(() => {\n    if (match?._id && isLive) {\n      console.log('Starting polling for volleyball match:', match._id);\n      const pollInterval = setInterval(async () => {\n        try {\n          const response = await fetch(`http://localhost:5000/api/matches/${match._id}`);\n          const data = await response.json();\n          if (data.success && data.data.volleyballScore) {\n            console.log('Volleyball polling update received:', data.data.volleyballScore);\n            setScore(data.data.volleyballScore);\n          }\n        } catch (error) {\n          console.error('Volleyball polling error:', error);\n        }\n      }, 2000); // Poll every 2 seconds\n\n      return () => {\n        console.log('Stopping volleyball polling for match:', match._id);\n        clearInterval(pollInterval);\n      };\n    }\n  }, [match?._id, isLive]);\n\n  const addPoint = async (team: 'teamA' | 'teamB') => {\n    if (!match?._id) return;\n    \n    setScore(prev => {\n      // Ensure team objects exist\n      const teamA = prev.teamA || { points: 0, sets: 0 };\n      const teamB = prev.teamB || { points: 0, sets: 0 };\n      \n      const newScore = {\n        teamA,\n        teamB,\n        [team]: { ...(team === 'teamA' ? teamA : teamB), points: (team === 'teamA' ? teamA.points : teamB.points) + 1 }\n      };\n\n      // Check if set is won (25 points with 2-point lead, or 15 in 5th set)\n      const setTarget = currentSet === 5 ? 15 : 25;\n      const otherTeam = team === 'teamA' ? 'teamB' : 'teamA';\n      \n      if (newScore[team].points >= setTarget && \n          newScore[team].points - newScore[otherTeam].points >= 2) {\n        // Set won\n        const updatedScore = {\n          ...newScore,\n          [team]: { ...newScore[team], sets: newScore[team].sets + 1, points: 0 },\n          [otherTeam]: { ...newScore[otherTeam], points: 0 }\n        };\n        setCurrentSet(prev => prev + 1);\n        return updatedScore;\n      }\n\n      // Switch serving team\n      setServing(otherTeam);\n      return newScore;\n    });\n\n    // Update score in database\n    try {\n      const response = await fetch(`http://localhost:5000/api/matches/${match._id}/score`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          sport: 'volleyball',\n          action: 'point',\n          team,\n          details: { points: (score[team]?.points || 0) + 1 }\n        }),\n      });\n\n        if (response.ok) {\n          const data = await response.json();\n          // Update with backend score if available\n          if (data.data.volleyballScore) {\n            setScore(data.data.volleyballScore);\n          }\n        }\n    } catch (error) {\n      console.error('Error updating score:', error);\n    }\n  };\n\n  const startMatch = async () => {\n    try {\n      // First create a match in the database\n      const createResponse = await fetch('http://localhost:5000/api/matches', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          sport: 'volleyball',\n          teamA: { name: 'Team A' },\n          teamB: { name: 'Team B' },\n          status: 'scheduled',\n          venue: 'Volleyball Court'\n        }),\n      });\n\n      if (createResponse.ok) {\n        const matchData = await createResponse.json();\n        setMatch(matchData.data);\n        \n        // Now start the match\n        const startResponse = await fetch(`http://localhost:5000/api/matches/${matchData.data._id}/start`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (startResponse.ok) {\n          setIsLive(true);\n        }\n      }\n    } catch (error) {\n      console.error('Error starting match:', error);\n    }\n  };\n\n  return (\n    <div className=\"volleyball-arena\">\n      <div className=\"volleyball-arena-container\">\n        <motion.div \n          className=\"arena-header\"\n          initial={{ opacity: 0, y: -30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <h1 className=\"arena-title\">Volleyball Arena</h1>\n          <div className=\"match-info\">\n            <div className=\"teams\">\n              <span className=\"team\">Team A</span>\n              <span className=\"vs\">VS</span>\n              <span className=\"team\">Team B</span>\n            </div>\n            <div className={`match-status ${isLive ? 'live' : 'scheduled'}`}>\n              {isLive ? 'LIVE' : 'SCHEDULED'}\n            </div>\n          </div>\n        </motion.div>\n\n        <div className=\"volleyball-scoreboard\">\n          <motion.div \n            className=\"score-display\"\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n          >\n            <div className=\"main-score\">\n              <div className=\"team-score\">\n                <span className=\"team-name\">Team A</span>\n                <span className=\"points\">{score.teamA?.points || 0}</span>\n                <div className=\"sets\">Sets: {score.teamA?.sets || 0}</div>\n              </div>\n              <div className=\"separator\">-</div>\n              <div className=\"team-score\">\n                <span className=\"points\">{score.teamB?.points || 0}</span>\n                <span className=\"team-name\">Team B</span>\n                <div className=\"sets\">Sets: {score.teamB?.sets || 0}</div>\n              </div>\n            </div>\n            <div className=\"set-info\">\n              <span className=\"current-set\">Set {currentSet}</span>\n              <span className=\"serving\">Serving: {serving === 'teamA' ? 'Team A' : 'Team B'}</span>\n            </div>\n          </motion.div>\n\n          <motion.div \n            className=\"scorer-controls\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.4 }}\n          >\n            <div className=\"points-section\">\n              <h3>Points</h3>\n              <div className=\"points-buttons\">\n                <button className=\"score-btn\" onClick={() => addPoint('teamA')}>\n                  Team A Point\n                </button>\n                <button className=\"score-btn\" onClick={() => addPoint('teamB')}>\n                  Team B Point\n                </button>\n              </div>\n            </div>\n\n            <div className=\"actions-section\">\n              {!isLive && (\n                <button className=\"action-btn start\" onClick={startMatch}>\n                  Start Match\n                </button>\n              )}\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VolleyballArena;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}