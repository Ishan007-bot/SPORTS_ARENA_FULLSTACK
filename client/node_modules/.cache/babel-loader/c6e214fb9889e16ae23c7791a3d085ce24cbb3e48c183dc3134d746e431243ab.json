{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ishan Ganguly\\\\OneDrive\\\\Desktop\\\\arena\\\\Sports_Arena\\\\client\\\\src\\\\pages\\\\arenas\\\\BadmintonArena.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { useSocket } from '../../context/SocketContext';\nimport './BadmintonArena.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BadmintonArena = () => {\n  _s();\n  var _score$playerA, _score$playerA2, _score$playerB, _score$playerB2;\n  const [score, setScore] = useState({\n    playerA: {\n      points: 0,\n      games: 0\n    },\n    playerB: {\n      points: 0,\n      games: 0\n    }\n  });\n  const [currentGame, setCurrentGame] = useState(1);\n  const [serving, setServing] = useState('playerA');\n  const [isLive, setIsLive] = useState(false);\n  const [match, setMatch] = useState(null);\n  const {\n    socket,\n    joinMatch,\n    leaveMatch\n  } = useSocket();\n\n  // Load existing match data on component mount\n  useEffect(() => {\n    const loadExistingMatch = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/matches/live');\n        const data = await response.json();\n        if (data.success && data.data.length > 0) {\n          const badmintonMatch = data.data.find(match => match.sport === 'badminton');\n          if (badmintonMatch) {\n            console.log('Loading existing badminton match:', badmintonMatch);\n            setMatch(badmintonMatch);\n            setIsLive(true);\n            if (badmintonMatch.badmintonScore) {\n              setScore(badmintonMatch.badmintonScore);\n            }\n          } else {\n            console.log('No existing badminton match found');\n          }\n        }\n      } catch (error) {\n        console.error('Error loading existing match:', error);\n      }\n    };\n    loadExistingMatch();\n  }, []);\n\n  // Poll for real-time score updates (fallback solution)\n  useEffect(() => {\n    if (match !== null && match !== void 0 && match._id && isLive) {\n      console.log('Starting polling for match:', match._id);\n      const pollInterval = setInterval(async () => {\n        try {\n          const response = await fetch(`http://localhost:5000/api/matches/${match._id}`);\n          const data = await response.json();\n          if (data.success && data.data.badmintonScore) {\n            console.log('Polling update received:', data.data.badmintonScore);\n            setScore(data.data.badmintonScore);\n          }\n        } catch (error) {\n          console.error('Polling error:', error);\n        }\n      }, 2000); // Poll every 2 seconds\n\n      return () => {\n        console.log('Stopping polling for match:', match._id);\n        clearInterval(pollInterval);\n      };\n    }\n  }, [match === null || match === void 0 ? void 0 : match._id, isLive]);\n  const addPoint = async player => {\n    if (!(match !== null && match !== void 0 && match._id)) return;\n    setScore(prev => {\n      var _prev$player;\n      const playerA = prev.playerA || {\n        points: 0,\n        games: 0\n      };\n      const playerB = prev.playerB || {\n        points: 0,\n        games: 0\n      };\n      const newScore = {\n        playerA,\n        playerB,\n        [player]: {\n          ...(prev[player] || {\n            points: 0,\n            games: 0\n          }),\n          points: (((_prev$player = prev[player]) === null || _prev$player === void 0 ? void 0 : _prev$player.points) || 0) + 1\n        }\n      };\n\n      // Check if game is won (21 points with 2-point lead, or 30 if tied at 29)\n      const otherPlayer = player === 'playerA' ? 'playerB' : 'playerA';\n      if (newScore[player].points >= 21 && newScore[player].points - newScore[otherPlayer].points >= 2 || newScore[player].points >= 30) {\n        // Game won\n        const updatedScore = {\n          ...newScore,\n          [player]: {\n            ...newScore[player],\n            games: newScore[player].games + 1,\n            points: 0\n          },\n          [otherPlayer]: {\n            ...newScore[otherPlayer],\n            points: 0\n          }\n        };\n        setCurrentGame(prev => prev + 1);\n        return updatedScore;\n      }\n\n      // Switch serving based on score\n      const totalPoints = newScore.playerA.points + newScore.playerB.points;\n      if (totalPoints % 2 === 0) {\n        setServing(player);\n      }\n      return newScore;\n    });\n\n    // Update score in database\n    try {\n      const response = await fetch(`http://localhost:5000/api/matches/${match._id}/score`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sport: 'badminton',\n          action: 'point',\n          team: player === 'playerA' ? 'teamA' : 'teamB',\n          details: {\n            points: 1\n          }\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        // Update with backend score if available\n        if (data.data.badmintonScore) {\n          setScore(data.data.badmintonScore);\n        }\n      }\n    } catch (error) {\n      console.error('Error updating score:', error);\n    }\n  };\n  const startMatch = async () => {\n    try {\n      // First create a match in the database\n      const createResponse = await fetch('http://localhost:5000/api/matches', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sport: 'badminton',\n          playerA: {\n            name: 'Player A'\n          },\n          playerB: {\n            name: 'Player B'\n          },\n          status: 'scheduled',\n          venue: 'Badminton Court'\n        })\n      });\n      if (createResponse.ok) {\n        const matchData = await createResponse.json();\n        console.log('Badminton match created:', matchData.data);\n        setMatch(matchData.data);\n\n        // Now start the match\n        const startResponse = await fetch(`http://localhost:5000/api/matches/${matchData.data._id}/start`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (startResponse.ok) {\n          console.log('Badminton match started successfully');\n          setIsLive(true);\n        }\n      }\n    } catch (error) {\n      console.error('Error starting match:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"badminton-arena\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"badminton-arena-container\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"arena-header\",\n        initial: {\n          opacity: 0,\n          y: -30\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          duration: 0.6\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"arena-title\",\n          children: \"Badminton Arena\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"match-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"players\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"player\",\n              children: \"Player A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"vs\",\n              children: \"VS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"player\",\n              children: \"Player B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `match-status ${isLive ? 'live' : 'scheduled'}`,\n            children: isLive ? 'LIVE' : 'SCHEDULED'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"badminton-scoreboard\",\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"score-display\",\n          initial: {\n            opacity: 0,\n            scale: 0.9\n          },\n          animate: {\n            opacity: 1,\n            scale: 1\n          },\n          transition: {\n            duration: 0.6,\n            delay: 0.2\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main-score\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-score\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"player-name\",\n                children: \"Player A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"points\",\n                children: ((_score$playerA = score.playerA) === null || _score$playerA === void 0 ? void 0 : _score$playerA.points) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"games\",\n                children: [\"Games: \", ((_score$playerA2 = score.playerA) === null || _score$playerA2 === void 0 ? void 0 : _score$playerA2.games) || 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator\",\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-score\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"points\",\n                children: ((_score$playerB = score.playerB) === null || _score$playerB === void 0 ? void 0 : _score$playerB.points) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"player-name\",\n                children: \"Player B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"games\",\n                children: [\"Games: \", ((_score$playerB2 = score.playerB) === null || _score$playerB2 === void 0 ? void 0 : _score$playerB2.games) || 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"current-game\",\n              children: [\"Game \", currentGame]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"serving\",\n              children: [\"Serving: \", serving === 'playerA' ? 'Player A' : 'Player B']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"scorer-controls\",\n          initial: {\n            opacity: 0,\n            y: 30\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          transition: {\n            duration: 0.6,\n            delay: 0.4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"points-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"points-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"score-btn\",\n                onClick: () => addPoint('playerA'),\n                children: \"Player A Point\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"score-btn\",\n                onClick: () => addPoint('playerB'),\n                children: \"Player B Point\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions-section\",\n            children: !isLive && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-btn start\",\n              onClick: startMatch,\n              children: \"Start Match\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(BadmintonArena, \"u5PaHCR3gcBEkY7rrli4Wxv3tFw=\", false, function () {\n  return [useSocket];\n});\n_c = BadmintonArena;\nexport default BadmintonArena;\nvar _c;\n$RefreshReg$(_c, \"BadmintonArena\");","map":{"version":3,"names":["React","useState","useEffect","motion","useSocket","jsxDEV","_jsxDEV","BadmintonArena","_s","_score$playerA","_score$playerA2","_score$playerB","_score$playerB2","score","setScore","playerA","points","games","playerB","currentGame","setCurrentGame","serving","setServing","isLive","setIsLive","match","setMatch","socket","joinMatch","leaveMatch","loadExistingMatch","response","fetch","data","json","success","length","badmintonMatch","find","sport","console","log","badmintonScore","error","_id","pollInterval","setInterval","clearInterval","addPoint","player","prev","_prev$player","newScore","otherPlayer","updatedScore","totalPoints","method","headers","body","JSON","stringify","action","team","details","ok","startMatch","createResponse","name","status","venue","matchData","startResponse","className","children","div","initial","opacity","y","animate","transition","duration","fileName","_jsxFileName","lineNumber","columnNumber","scale","delay","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ishan Ganguly/OneDrive/Desktop/arena/Sports_Arena/client/src/pages/arenas/BadmintonArena.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { useSocket } from '../../context/SocketContext';\nimport './BadmintonArena.css';\n\nconst BadmintonArena: React.FC = () => {\n  const [score, setScore] = useState({\n    playerA: { points: 0, games: 0 },\n    playerB: { points: 0, games: 0 }\n  });\n  const [currentGame, setCurrentGame] = useState(1);\n  const [serving, setServing] = useState<'playerA' | 'playerB'>('playerA');\n  const [isLive, setIsLive] = useState(false);\n  const [match, setMatch] = useState<any>(null);\n  const { socket, joinMatch, leaveMatch } = useSocket();\n\n  // Load existing match data on component mount\n  useEffect(() => {\n    const loadExistingMatch = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/matches/live');\n        const data = await response.json();\n        if (data.success && data.data.length > 0) {\n          const badmintonMatch = data.data.find((match: any) => match.sport === 'badminton');\n          if (badmintonMatch) {\n            console.log('Loading existing badminton match:', badmintonMatch);\n            setMatch(badmintonMatch);\n            setIsLive(true);\n            if (badmintonMatch.badmintonScore) {\n              setScore(badmintonMatch.badmintonScore);\n            }\n          } else {\n            console.log('No existing badminton match found');\n          }\n        }\n      } catch (error) {\n        console.error('Error loading existing match:', error);\n      }\n    };\n\n    loadExistingMatch();\n  }, []);\n\n  // Poll for real-time score updates (fallback solution)\n  useEffect(() => {\n    if (match?._id && isLive) {\n      console.log('Starting polling for match:', match._id);\n      const pollInterval = setInterval(async () => {\n        try {\n          const response = await fetch(`http://localhost:5000/api/matches/${match._id}`);\n          const data = await response.json();\n          if (data.success && data.data.badmintonScore) {\n            console.log('Polling update received:', data.data.badmintonScore);\n            setScore(data.data.badmintonScore);\n          }\n        } catch (error) {\n          console.error('Polling error:', error);\n        }\n      }, 2000); // Poll every 2 seconds\n\n      return () => {\n        console.log('Stopping polling for match:', match._id);\n        clearInterval(pollInterval);\n      };\n    }\n  }, [match?._id, isLive]);\n\n  const addPoint = async (player: 'playerA' | 'playerB') => {\n    if (!match?._id) return;\n    \n    setScore(prev => {\n      const playerA = prev.playerA || { points: 0, games: 0 };\n      const playerB = prev.playerB || { points: 0, games: 0 };\n      \n      const newScore = {\n        playerA,\n        playerB,\n        [player]: { ...prev[player] || { points: 0, games: 0 }, points: (prev[player]?.points || 0) + 1 }\n      };\n\n      // Check if game is won (21 points with 2-point lead, or 30 if tied at 29)\n      const otherPlayer = player === 'playerA' ? 'playerB' : 'playerA';\n      \n      if ((newScore[player].points >= 21 && newScore[player].points - newScore[otherPlayer].points >= 2) ||\n          (newScore[player].points >= 30)) {\n        // Game won\n        const updatedScore = {\n          ...newScore,\n          [player]: { ...newScore[player], games: newScore[player].games + 1, points: 0 },\n          [otherPlayer]: { ...newScore[otherPlayer], points: 0 }\n        };\n        setCurrentGame(prev => prev + 1);\n        return updatedScore;\n      }\n\n      // Switch serving based on score\n      const totalPoints = newScore.playerA.points + newScore.playerB.points;\n      if (totalPoints % 2 === 0) {\n        setServing(player);\n      }\n\n      return newScore;\n    });\n\n    // Update score in database\n    try {\n      const response = await fetch(`http://localhost:5000/api/matches/${match._id}/score`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          sport: 'badminton',\n          action: 'point',\n          team: player === 'playerA' ? 'teamA' : 'teamB',\n          details: { points: 1 }\n        }),\n      });\n\n        if (response.ok) {\n          const data = await response.json();\n          // Update with backend score if available\n          if (data.data.badmintonScore) {\n            setScore(data.data.badmintonScore);\n          }\n        }\n    } catch (error) {\n      console.error('Error updating score:', error);\n    }\n  };\n\n  const startMatch = async () => {\n    try {\n      // First create a match in the database\n      const createResponse = await fetch('http://localhost:5000/api/matches', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          sport: 'badminton',\n          playerA: { name: 'Player A' },\n          playerB: { name: 'Player B' },\n          status: 'scheduled',\n          venue: 'Badminton Court'\n        }),\n      });\n\n      if (createResponse.ok) {\n        const matchData = await createResponse.json();\n        console.log('Badminton match created:', matchData.data);\n        setMatch(matchData.data);\n        \n        // Now start the match\n        const startResponse = await fetch(`http://localhost:5000/api/matches/${matchData.data._id}/start`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (startResponse.ok) {\n          console.log('Badminton match started successfully');\n          setIsLive(true);\n        }\n      }\n    } catch (error) {\n      console.error('Error starting match:', error);\n    }\n  };\n\n  return (\n    <div className=\"badminton-arena\">\n      <div className=\"badminton-arena-container\">\n        <motion.div \n          className=\"arena-header\"\n          initial={{ opacity: 0, y: -30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <h1 className=\"arena-title\">Badminton Arena</h1>\n          <div className=\"match-info\">\n            <div className=\"players\">\n              <span className=\"player\">Player A</span>\n              <span className=\"vs\">VS</span>\n              <span className=\"player\">Player B</span>\n            </div>\n            <div className={`match-status ${isLive ? 'live' : 'scheduled'}`}>\n              {isLive ? 'LIVE' : 'SCHEDULED'}\n            </div>\n          </div>\n        </motion.div>\n\n        <div className=\"badminton-scoreboard\">\n          <motion.div \n            className=\"score-display\"\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n          >\n            <div className=\"main-score\">\n              <div className=\"player-score\">\n                <span className=\"player-name\">Player A</span>\n                <span className=\"points\">{score.playerA?.points || 0}</span>\n                <div className=\"games\">Games: {score.playerA?.games || 0}</div>\n              </div>\n              <div className=\"separator\">-</div>\n              <div className=\"player-score\">\n                <span className=\"points\">{score.playerB?.points || 0}</span>\n                <span className=\"player-name\">Player B</span>\n                <div className=\"games\">Games: {score.playerB?.games || 0}</div>\n              </div>\n            </div>\n            <div className=\"game-info\">\n              <span className=\"current-game\">Game {currentGame}</span>\n              <span className=\"serving\">Serving: {serving === 'playerA' ? 'Player A' : 'Player B'}</span>\n            </div>\n          </motion.div>\n\n          <motion.div \n            className=\"scorer-controls\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.4 }}\n          >\n            <div className=\"points-section\">\n              <h3>Points</h3>\n              <div className=\"points-buttons\">\n                <button className=\"score-btn\" onClick={() => addPoint('playerA')}>\n                  Player A Point\n                </button>\n                <button className=\"score-btn\" onClick={() => addPoint('playerB')}>\n                  Player B Point\n                </button>\n              </div>\n            </div>\n\n            <div className=\"actions-section\">\n              {!isLive && (\n                <button className=\"action-btn start\" onClick={startMatch}>\n                  Start Match\n                </button>\n              )}\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BadmintonArena;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}