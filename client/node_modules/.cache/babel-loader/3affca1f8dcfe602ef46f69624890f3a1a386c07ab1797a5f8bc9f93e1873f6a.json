{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ishan Ganguly\\\\OneDrive\\\\Desktop\\\\arena\\\\Sports_Arena\\\\client\\\\src\\\\context\\\\SocketContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext(undefined);\nexport const useSocket = () => {\n  _s();\n  const context = useContext(SocketContext);\n  if (context === undefined) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    const newSocket = io(process.env.REACT_APP_SERVER_URL || 'http://localhost:5000', {\n      transports: ['websocket', 'polling']\n    });\n    newSocket.on('connect', () => {\n      console.log('Connected to server');\n      setIsConnected(true);\n    });\n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setIsConnected(false);\n    });\n    newSocket.on('connect_error', error => {\n      console.error('Connection error:', error);\n      setIsConnected(false);\n    });\n    setSocket(newSocket);\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n  const joinMatch = matchId => {\n    if (socket) {\n      socket.emit('join-match', matchId);\n    }\n  };\n  const leaveMatch = matchId => {\n    if (socket) {\n      socket.emit('leave-match', matchId);\n    }\n  };\n  const joinLiveScoreboard = () => {\n    if (socket) {\n      socket.emit('join-live-scoreboard');\n    }\n  };\n  const leaveLiveScoreboard = () => {\n    if (socket) {\n      socket.emit('leave-live-scoreboard');\n    }\n  };\n  const value = {\n    socket,\n    isConnected,\n    joinMatch,\n    leaveMatch,\n    joinLiveScoreboard,\n    leaveLiveScoreboard\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"QMiDLkz4HTcH977k6GWSjZyAdcs=\");\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","jsxDEV","_jsxDEV","SocketContext","undefined","useSocket","_s","context","Error","SocketProvider","children","_s2","socket","setSocket","isConnected","setIsConnected","newSocket","process","env","REACT_APP_SERVER_URL","transports","on","console","log","error","close","joinMatch","matchId","emit","leaveMatch","joinLiveScoreboard","leaveLiveScoreboard","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ishan Ganguly/OneDrive/Desktop/arena/Sports_Arena/client/src/context/SocketContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { io, Socket } from 'socket.io-client';\r\n\r\ninterface SocketContextType {\r\n  socket: Socket | null;\r\n  isConnected: boolean;\r\n  joinMatch: (matchId: string) => void;\r\n  leaveMatch: (matchId: string) => void;\r\n  joinLiveScoreboard: () => void;\r\n  leaveLiveScoreboard: () => void;\r\n}\r\n\r\nconst SocketContext = createContext<SocketContextType | undefined>(undefined);\r\n\r\nexport const useSocket = () => {\r\n  const context = useContext(SocketContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSocket must be used within a SocketProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface SocketProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const SocketProvider: React.FC<SocketProviderProps> = ({ children }) => {\r\n  const [socket, setSocket] = useState<Socket | null>(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const newSocket = io(process.env.REACT_APP_SERVER_URL || 'http://localhost:5000', {\r\n      transports: ['websocket', 'polling'],\r\n    });\r\n\r\n    newSocket.on('connect', () => {\r\n      console.log('Connected to server');\r\n      setIsConnected(true);\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      console.log('Disconnected from server');\r\n      setIsConnected(false);\r\n    });\r\n\r\n    newSocket.on('connect_error', (error) => {\r\n      console.error('Connection error:', error);\r\n      setIsConnected(false);\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    return () => {\r\n      newSocket.close();\r\n    };\r\n  }, []);\r\n\r\n  const joinMatch = (matchId: string) => {\r\n    if (socket) {\r\n      socket.emit('join-match', matchId);\r\n    }\r\n  };\r\n\r\n  const leaveMatch = (matchId: string) => {\r\n    if (socket) {\r\n      socket.emit('leave-match', matchId);\r\n    }\r\n  };\r\n\r\n  const joinLiveScoreboard = () => {\r\n    if (socket) {\r\n      socket.emit('join-live-scoreboard');\r\n    }\r\n  };\r\n\r\n  const leaveLiveScoreboard = () => {\r\n    if (socket) {\r\n      socket.emit('leave-live-scoreboard');\r\n    }\r\n  };\r\n\r\n  const value: SocketContextType = {\r\n    socket,\r\n    isConnected,\r\n    joinMatch,\r\n    leaveMatch,\r\n    joinLiveScoreboard,\r\n    leaveLiveScoreboard,\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider value={value}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}