{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ishan Ganguly\\\\OneDrive\\\\Desktop\\\\arena\\\\Sports_Arena\\\\client\\\\src\\\\context\\\\SocketContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext(undefined);\nexport const useSocket = () => {\n  _s();\n  const context = useContext(SocketContext);\n  if (context === undefined) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    const newSocket = io(process.env.REACT_APP_SERVER_URL || 'http://localhost:5000', {\n      transports: ['websocket', 'polling']\n    });\n    newSocket.on('connect', () => {\n      console.log('✅ Connected to server with ID:', newSocket.id);\n      setIsConnected(true);\n    });\n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setIsConnected(false);\n    });\n    newSocket.on('connect_error', error => {\n      console.error('Connection error:', error);\n      setIsConnected(false);\n    });\n    setSocket(newSocket);\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n  const joinMatch = matchId => {\n    if (socket) {\n      console.log('Joining match room:', matchId);\n      socket.emit('join-match', matchId);\n    }\n  };\n  const leaveMatch = matchId => {\n    if (socket) {\n      socket.emit('leave-match', matchId);\n    }\n  };\n  const joinLiveScoreboard = () => {\n    if (socket) {\n      socket.emit('join-live-scoreboard');\n    }\n  };\n  const leaveLiveScoreboard = () => {\n    if (socket) {\n      socket.emit('leave-live-scoreboard');\n    }\n  };\n  const value = {\n    socket,\n    isConnected,\n    joinMatch,\n    leaveMatch,\n    joinLiveScoreboard,\n    leaveLiveScoreboard\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"QMiDLkz4HTcH977k6GWSjZyAdcs=\");\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","jsxDEV","_jsxDEV","SocketContext","undefined","useSocket","_s","context","Error","SocketProvider","children","_s2","socket","setSocket","isConnected","setIsConnected","newSocket","process","env","REACT_APP_SERVER_URL","transports","on","console","log","id","error","close","joinMatch","matchId","emit","leaveMatch","joinLiveScoreboard","leaveLiveScoreboard","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ishan Ganguly/OneDrive/Desktop/arena/Sports_Arena/client/src/context/SocketContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io, Socket } from 'socket.io-client';\n\ninterface SocketContextType {\n  socket: Socket | null;\n  isConnected: boolean;\n  joinMatch: (matchId: string) => void;\n  leaveMatch: (matchId: string) => void;\n  joinLiveScoreboard: () => void;\n  leaveLiveScoreboard: () => void;\n}\n\nconst SocketContext = createContext<SocketContextType | undefined>(undefined);\n\nexport const useSocket = () => {\n  const context = useContext(SocketContext);\n  if (context === undefined) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n\ninterface SocketProviderProps {\n  children: React.ReactNode;\n}\n\nexport const SocketProvider: React.FC<SocketProviderProps> = ({ children }) => {\n  const [socket, setSocket] = useState<Socket | null>(null);\n  const [isConnected, setIsConnected] = useState(false);\n\n  useEffect(() => {\n    const newSocket = io(process.env.REACT_APP_SERVER_URL || 'http://localhost:5000', {\n      transports: ['websocket', 'polling'],\n    });\n\n    newSocket.on('connect', () => {\n      console.log('✅ Connected to server with ID:', newSocket.id);\n      setIsConnected(true);\n    });\n\n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setIsConnected(false);\n    });\n\n    newSocket.on('connect_error', (error) => {\n      console.error('Connection error:', error);\n      setIsConnected(false);\n    });\n\n    setSocket(newSocket);\n\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  const joinMatch = (matchId: string) => {\n    if (socket) {\n      console.log('Joining match room:', matchId);\n      socket.emit('join-match', matchId);\n    }\n  };\n\n  const leaveMatch = (matchId: string) => {\n    if (socket) {\n      socket.emit('leave-match', matchId);\n    }\n  };\n\n  const joinLiveScoreboard = () => {\n    if (socket) {\n      socket.emit('join-live-scoreboard');\n    }\n  };\n\n  const leaveLiveScoreboard = () => {\n    if (socket) {\n      socket.emit('leave-live-scoreboard');\n    }\n  };\n\n  const value: SocketContextType = {\n    socket,\n    isConnected,\n    joinMatch,\n    leaveMatch,\n    joinLiveScoreboard,\n    leaveLiveScoreboard,\n  };\n\n  return (\n    <SocketContext.Provider value={value}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}